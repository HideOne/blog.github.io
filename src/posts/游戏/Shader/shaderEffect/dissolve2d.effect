// Effect Syntax Guide: https://docs.cocos.com/creator/manual/zh/shader/index.html
// 2d消融shader
CCEffect %{
  techniques:
  - passes:
    - vert: unlit-vs:vert # builtin header
      frag: unlit-fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: 
        u_dissolveMap: { value: white, editor: { tooltip: '噪声贴图' } }
        dissolveThreshold: { value: 0.5, editor: { range:[0, 1, 0.01], slide: true, tooltip: '溶解阈值' } } # 此处定义的参数都必须指向 CCProgram 处对应声明的 uniform
}%

CCProgram unlit-vs %{
  precision highp float;
  #include <cc-global>
  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 color;
  out vec2 uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    uv0 = a_texCoord;
    color = a_color;

    return pos;
  }
}%


CCProgram unlit-fs %{
  precision highp float;
  in vec4 color;
  in vec2 uv0;
  
  uniform Dissolve {
    float dissolveThreshold;// 熔岩阀值[0, 1];;
  }; 

  #pragma builtin(local)
  layout(set = 2, binding = 12) uniform sampler2D cc_spriteTexture;
  #if USE_TEXTURE
   
    uniform sampler2D u_dissolveMap;// 熔岩形状的纹理;
    
  #endif

   vec4 frag () {
    vec4 o = vec4(1, 1, 1, 1);
   
    o = texture(cc_spriteTexture, uv0);
    o *= color;
    float threshold = 1.0;

    #if USE_TEXTURE
      vec4 thresholdMap = texture(u_dissolveMap, uv0);
      threshold = thresholdMap.r;
        if(threshold < dissolveThreshold) {
        discard; // 丢弃当前像素的渲染结果
      }

   
      if(threshold < dissolveThreshold + 0.05) {
        o = vec4(0.6, 0.3, 0.2, o.a);
      }
    #endif
   
  

    return o;
   }
}%
