const e=JSON.parse('{"key":"v-2f7a65c4","path":"/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F.html","title":"命令模式","lang":"zh-CN","frontmatter":{"title":"命令模式","category":["游戏"],"date":"2023-12-04T14:20:00.000Z","headerDepth":2,"description":"定义 将一个请求（request）封装成一个对象，从而允许你使用不同的请求、队列或日志将客户端参数化，同时支持请求操作的撤销与恢复。 简单概括就是: 把调用方法对象化(实例化) class Command { public: virtual ～Command() {} virtual void execute(GameActor&amp; actor) = 0; Command* InputHandler::handleInput() { if (isPressed(BUTTON_X)) return buttonX_; if (isPressed(BUTTON_Y)) return buttonY_; if (isPressed(BUTTON_A)) return buttonA_; if (isPressed(BUTTON_B)) return buttonB_; // Nothing pressed, so do nothing. return NULL; } }; class JumpCommand : public Command { public: virtual void execute(GameActor&amp; actor) { actor.jump(); } }; Command* command = inputHandler.handleInput(); if (command) { command-&gt;execute(actor); }","head":[["meta",{"property":"og:url","content":"https://blog.vipfreevpn.top/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"命令模式"}],["meta",{"property":"og:description","content":"定义 将一个请求（request）封装成一个对象，从而允许你使用不同的请求、队列或日志将客户端参数化，同时支持请求操作的撤销与恢复。 简单概括就是: 把调用方法对象化(实例化) class Command { public: virtual ～Command() {} virtual void execute(GameActor&amp; actor) = 0; Command* InputHandler::handleInput() { if (isPressed(BUTTON_X)) return buttonX_; if (isPressed(BUTTON_Y)) return buttonY_; if (isPressed(BUTTON_A)) return buttonA_; if (isPressed(BUTTON_B)) return buttonB_; // Nothing pressed, so do nothing. return NULL; } }; class JumpCommand : public Command { public: virtual void execute(GameActor&amp; actor) { actor.jump(); } }; Command* command = inputHandler.handleInput(); if (command) { command-&gt;execute(actor); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-22T10:29:48.000Z"}],["meta",{"property":"article:author","content":"HideOne"}],["meta",{"property":"article:published_time","content":"2023-12-04T14:20:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-22T10:29:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"命令模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-04T14:20:00.000Z\\",\\"dateModified\\":\\"2023-12-22T10:29:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HideOne\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"撤销和重做","slug":"撤销和重做","link":"#撤销和重做","children":[{"level":3,"title":"多次撤回","slug":"多次撤回","link":"#多次撤回","children":[]}]}],"git":{"createdTime":1703240988000,"updatedTime":1703240988000,"contributors":[{"name":"HideOne","email":"844085696@qq.com","commits":1}]},"readingTime":{"minutes":0.9,"words":270},"filePathRelative":"posts/设计模式/命令模式.md","localizedDate":"2023年12月4日","excerpt":"<h2> 定义</h2>\\n<p>将一个请求（request）封装成一个对象，从而允许你使用不同的请求、队列或日志将客户端参数化，同时支持请求操作的撤销与恢复。</p>\\n<p>简单概括就是: 把调用方法对象化(实例化)</p>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"language-c++\\"><code>    class Command\\n    {\\n    public:\\n      virtual ～Command() {}\\n      virtual void execute(GameActor&amp; actor) = 0;\\n\\n        Command* InputHandler::handleInput()\\n        {\\n            if (isPressed(BUTTON_X)) return buttonX_;\\n            if (isPressed(BUTTON_Y)) return buttonY_;\\n            if (isPressed(BUTTON_A)) return buttonA_;\\n            if (isPressed(BUTTON_B)) return buttonB_;\\n\\n            // Nothing pressed, so do nothing.\\n            return NULL;\\n        }\\n    };\\n\\n\\n    class JumpCommand : public Command\\n    {\\n    public:\\n      virtual void execute(GameActor&amp; actor)\\n      {\\n        actor.jump();\\n      }\\n    };\\n\\n\\n    Command* command = inputHandler.handleInput();\\n    if (command)\\n    {\\n      command-&gt;execute(actor);\\n    }\\n\\n   \\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
