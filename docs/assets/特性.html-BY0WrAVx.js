const e=JSON.parse('{"key":"v-1d144d98","path":"/posts/%E8%AF%AD%E8%A8%80/CNet/%E7%89%B9%E6%80%A7.html","title":"特性","lang":"zh-CN","frontmatter":{"title":"特性","category":["语言"],"date":"2024-01-30T21:16:02.000Z","description":"什么是 是一种用于为程序元素（如类、方法、属性等）添加元数据的声明性标记。 这些元数据提供有关程序元素的信息，可以在运行时通过反射获取。 特性通过方括号 [] 中的标记语法应用于代码的声明部分，如类、方法或属性 为什么使用 为程序元素添加元数据： 提供关于程序元素的额外信息，这些信息可以在运行时动态获取。 影响编译或运行时行为： 一些特性可以影响编译器的行为，或在运行时改变程序的执行方式。 支持工具和框架： 特性可用于与工具、框架和第三方库进行交互，以实现更丰富的功能和行为。","head":[["meta",{"property":"og:url","content":"https://blog.vipfreevpn.top/posts/%E8%AF%AD%E8%A8%80/CNet/%E7%89%B9%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"特性"}],["meta",{"property":"og:description","content":"什么是 是一种用于为程序元素（如类、方法、属性等）添加元数据的声明性标记。 这些元数据提供有关程序元素的信息，可以在运行时通过反射获取。 特性通过方括号 [] 中的标记语法应用于代码的声明部分，如类、方法或属性 为什么使用 为程序元素添加元数据： 提供关于程序元素的额外信息，这些信息可以在运行时动态获取。 影响编译或运行时行为： 一些特性可以影响编译器的行为，或在运行时改变程序的执行方式。 支持工具和框架： 特性可用于与工具、框架和第三方库进行交互，以实现更丰富的功能和行为。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-30T14:35:28.000Z"}],["meta",{"property":"article:author","content":"HideOne"}],["meta",{"property":"article:published_time","content":"2024-01-30T21:16:02.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-30T14:35:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"特性\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-30T21:16:02.000Z\\",\\"dateModified\\":\\"2024-01-30T14:35:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HideOne\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是","slug":"什么是","link":"#什么是","children":[]},{"level":2,"title":"为什么使用","slug":"为什么使用","link":"#为什么使用","children":[]},{"level":2,"title":"Obsolete","slug":"obsolete","link":"#obsolete","children":[]},{"level":2,"title":"Serializable","slug":"serializable","link":"#serializable","children":[]},{"level":2,"title":"DisplayName","slug":"displayname","link":"#displayname","children":[]},{"level":2,"title":"Conditional","slug":"conditional","link":"#conditional","children":[]},{"level":2,"title":"调用者信息特性","slug":"调用者信息特性","link":"#调用者信息特性","children":[{"level":3,"title":"CallerMemberName","slug":"callermembername","link":"#callermembername","children":[]},{"level":3,"title":"CallerFilePath","slug":"callerfilepath","link":"#callerfilepath","children":[]},{"level":3,"title":"CallerLineNumber","slug":"callerlinenumber","link":"#callerlinenumber","children":[]}]},{"level":2,"title":"DebuggerStepThrough","slug":"debuggerstepthrough","link":"#debuggerstepthrough","children":[]},{"level":2,"title":"自定义特性","slug":"自定义特性","link":"#自定义特性","children":[]}],"git":{"createdTime":1706625328000,"updatedTime":1706625328000,"contributors":[{"name":"HideOne","email":"844085696@qq.com","commits":1}]},"readingTime":{"minutes":1.94,"words":583},"filePathRelative":"posts/语言/CNet/特性.md","localizedDate":"2024年1月31日","excerpt":"<h2> 什么是</h2>\\n<p>是一种用于为程序元素（如类、方法、属性等）添加元数据的声明性标记。\\n这些元数据提供有关程序元素的信息，可以在运行时通过反射获取。\\n特性通过方括号 [] 中的标记语法应用于代码的声明部分，如类、方法或属性</p>\\n<h2> 为什么使用</h2>\\n<ul>\\n<li>为程序元素添加元数据： 提供关于程序元素的额外信息，这些信息可以在运行时动态获取。</li>\\n<li>影响编译或运行时行为： 一些特性可以影响编译器的行为，或在运行时改变程序的执行方式。</li>\\n<li>支持工具和框架： 特性可用于与工具、框架和第三方库进行交互，以实现更丰富的功能和行为。</li>\\n</ul>","autoDesc":true}');export{e as data};
