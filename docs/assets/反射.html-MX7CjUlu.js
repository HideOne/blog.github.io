const e=JSON.parse('{"key":"v-fb4512ea","path":"/posts/%E8%AF%AD%E8%A8%80/CNet/%E5%8F%8D%E5%B0%84.html","title":"C#","lang":"zh-CN","frontmatter":{"title":"C#","category":["语言"],"date":"2024-01-30T14:11:44.000Z","description":"什么是 反射（Reflection）是允许你在运行时获取并操作程序集、类型、对象的信息 为什么 使得你可以在运行时了解和操作代码的结构 怎么用 using System; using System.Reflection; class Program { static void Main() { Type myType = typeof(MyClass); // 创建类的实例 object instance = Activator.CreateInstance(myType); // 获取方法信息 MethodInfo methodInfo = myType.GetMethod(\\"MyMethod\\"); // 调用方法 methodInfo.Invoke(instance, null); // 获取和设置属性值 PropertyInfo propertyInfo = myType.GetProperty(\\"MyProperty\\"); propertyInfo.SetValue(instance, 42); Console.WriteLine(\\"Property Value: \\" + propertyInfo.GetValue(instance)); } } public class MyClass { public int MyProperty { get; set; } public void MyMethod() { Console.WriteLine(\\"MyMethod called.\\"); } }","head":[["meta",{"property":"og:url","content":"https://blog.vipfreevpn.top/posts/%E8%AF%AD%E8%A8%80/CNet/%E5%8F%8D%E5%B0%84.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"C#"}],["meta",{"property":"og:description","content":"什么是 反射（Reflection）是允许你在运行时获取并操作程序集、类型、对象的信息 为什么 使得你可以在运行时了解和操作代码的结构 怎么用 using System; using System.Reflection; class Program { static void Main() { Type myType = typeof(MyClass); // 创建类的实例 object instance = Activator.CreateInstance(myType); // 获取方法信息 MethodInfo methodInfo = myType.GetMethod(\\"MyMethod\\"); // 调用方法 methodInfo.Invoke(instance, null); // 获取和设置属性值 PropertyInfo propertyInfo = myType.GetProperty(\\"MyProperty\\"); propertyInfo.SetValue(instance, 42); Console.WriteLine(\\"Property Value: \\" + propertyInfo.GetValue(instance)); } } public class MyClass { public int MyProperty { get; set; } public void MyMethod() { Console.WriteLine(\\"MyMethod called.\\"); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-30T13:09:35.000Z"}],["meta",{"property":"article:author","content":"HideOne"}],["meta",{"property":"article:published_time","content":"2024-01-30T14:11:44.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-30T13:09:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C#\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-30T14:11:44.000Z\\",\\"dateModified\\":\\"2024-01-30T13:09:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HideOne\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是","slug":"什么是","link":"#什么是","children":[]},{"level":2,"title":"为什么","slug":"为什么","link":"#为什么","children":[]},{"level":2,"title":"怎么用","slug":"怎么用","link":"#怎么用","children":[]}],"git":{"createdTime":1706620175000,"updatedTime":1706620175000,"contributors":[{"name":"HideOne","email":"844085696@qq.com","commits":1}]},"readingTime":{"minutes":0.48,"words":145},"filePathRelative":"posts/语言/CNet/反射.md","localizedDate":"2024年1月30日","excerpt":"<h2> 什么是</h2>\\n<p>反射（Reflection）是允许你在运行时获取并操作程序集、类型、对象的信息</p>\\n<h2> 为什么</h2>\\n<p>使得你可以在运行时了解和操作代码的结构</p>\\n<h2> 怎么用</h2>\\n<div class=\\"language-c# line-numbers-mode\\" data-ext=\\"c#\\"><pre class=\\"language-c#\\"><code>using System;\\nusing System.Reflection;\\n\\nclass Program\\n{\\n    static void Main()\\n    {\\n        Type myType = typeof(MyClass);\\n\\n        // 创建类的实例\\n        object instance = Activator.CreateInstance(myType);\\n\\n        // 获取方法信息\\n        MethodInfo methodInfo = myType.GetMethod(\\"MyMethod\\");\\n\\n        // 调用方法\\n        methodInfo.Invoke(instance, null);\\n\\n        // 获取和设置属性值\\n        PropertyInfo propertyInfo = myType.GetProperty(\\"MyProperty\\"); \\n        propertyInfo.SetValue(instance, 42);\\n        Console.WriteLine(\\"Property Value: \\" + propertyInfo.GetValue(instance));\\n    }\\n}\\n\\npublic class MyClass\\n{\\n    public int MyProperty { get; set; }\\n    public void MyMethod() { Console.WriteLine(\\"MyMethod called.\\"); }\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
