import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as l,o as t}from"./app-DJxM9ZWL.js";const e="/assets/image-5-C2hTISW-.png",n={};function h(k,s){return t(),a("div",null,s[0]||(s[0]=[l('<h3 id="smoothstep" tabindex="-1"><a class="header-anchor" href="#smoothstep"><span>smoothstep</span></a></h3><ul><li>smoothstep可以用来生成0到1的平滑过渡值，它也叫平滑阶梯函数</li><li>smoothstep(edg0, edg1, x); edg0左边缘，edg1右边缘，使x在edg0和edg1区间内进行平滑处理。返回值在[0， 1]区间内，当x &gt; edg1时，返回1，当x &lt; edg0时，返回0，当x在edg0和edg1之间时，返回x <img src="'+e+`" alt="alt text" loading="lazy"></li></ul><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" data-title="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> smoothstep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t1, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t2, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Scale, bias and saturate x to 0..1 range</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 还记得么？在remap算法中接触过</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  x </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> clamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((x </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t1) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (t2 </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t1), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Evaluate polynomial</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step" tabindex="-1"><a class="header-anchor" href="#step"><span>step</span></a></h3><ul><li>step(a, b);当b &gt; a时， 返回1；当b &lt; a时，返回0</li></ul><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" data-title="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> step</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (b </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    else</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mix" tabindex="-1"><a class="header-anchor" href="#mix"><span>MIX</span></a></h3><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" data-title="glsl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">vec4</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> mix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(vec4 colorA, vec4 colorB, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> colorA </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a) </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> colorB </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const r=i(n,[["render",h],["__file","GLSL函数.html.vue"]]),g=JSON.parse('{"path":"/posts/%E6%B8%B8%E6%88%8F/Shader/shader%E5%BA%94%E7%94%A8/GLSL%E5%87%BD%E6%95%B0.html","title":"GLSL函数","lang":"zh-CN","frontmatter":{"title":"GLSL函数","category":["shader应用"],"date":"2024-05-17T12:04:50.000Z","description":"smoothstep smoothstep可以用来生成0到1的平滑过渡值，它也叫平滑阶梯函数 smoothstep(edg0, edg1, x); edg0左边缘，edg1右边缘，使x在edg0和edg1区间内进行平滑处理。返回值在[0， 1]区间内，当x > edg1时，返回1，当x < edg0时，返回0，当x在edg0和edg1之间时，返回x a...","head":[["meta",{"property":"og:url","content":"https://blog.vipfreevpn.top/posts/%E6%B8%B8%E6%88%8F/Shader/shader%E5%BA%94%E7%94%A8/GLSL%E5%87%BD%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"GLSL函数"}],["meta",{"property":"og:description","content":"smoothstep smoothstep可以用来生成0到1的平滑过渡值，它也叫平滑阶梯函数 smoothstep(edg0, edg1, x); edg0左边缘，edg1右边缘，使x在edg0和edg1区间内进行平滑处理。返回值在[0， 1]区间内，当x > edg1时，返回1，当x < edg0时，返回0，当x在edg0和edg1之间时，返回x a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-18T15:32:48.000Z"}],["meta",{"property":"article:published_time","content":"2024-05-17T12:04:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-18T15:32:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GLSL函数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-17T12:04:50.000Z\\",\\"dateModified\\":\\"2024-05-18T15:32:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HideOne\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"smoothstep","slug":"smoothstep","link":"#smoothstep","children":[]},{"level":3,"title":"step","slug":"step","link":"#step","children":[]},{"level":3,"title":"MIX","slug":"mix","link":"#mix","children":[]}],"git":{"createdTime":1716023636000,"updatedTime":1716046368000,"contributors":[{"name":"HideOne","email":"844085696@qq.com","commits":1}]},"readingTime":{"minutes":0.68,"words":205},"filePathRelative":"posts/游戏/Shader/shader应用/GLSL函数.md","localizedDate":"2024年5月17日","excerpt":"<h3>smoothstep</h3>\\n<ul>\\n<li>smoothstep可以用来生成0到1的平滑过渡值，它也叫平滑阶梯函数</li>\\n<li>smoothstep(edg0, edg1, x); edg0左边缘，edg1右边缘，使x在edg0和edg1区间内进行平滑处理。返回值在[0， 1]区间内，当x &gt; edg1时，返回1，当x &lt; edg0时，返回0，当x在edg0和edg1之间时，返回x\\n</li>\\n</ul>\\n<div class=\\"language-glsl line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"glsl\\" data-title=\\"glsl\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">float</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> smoothstep</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">float</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> t1, </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">float</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> t2, </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">float</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x) {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  // Scale, bias and saturate x to 0..1 range</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  // 还记得么？在remap算法中接触过</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  x </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">=</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> clamp</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">((x </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">-</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> t1) </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">/</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (t2 </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">-</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> t1), </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">); </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  // Evaluate polynomial</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">  return</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">*</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\">*</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">3</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\"> -</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 2</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#C678DD\\"> *</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,g as data};
